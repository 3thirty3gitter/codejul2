// Sweet Cookie Shop - Generated by CodePilot AI
console.log('?? Sweet Cookie Shop loaded - Built by CodePilot AI!');

// Sample cookie products data
const products = [
    {
        id: 1,
        name: "Chocolate Chip Classic",
        price: 12.99,
        description: "Our signature chocolate chip cookies made with premium Belgian chocolate chips and Madagascar vanilla.",
        emoji: "??"
    },
    {
        id: 2,
        name: "Double Fudge Brownie",
        price: 14.99,
        description: "Rich, fudgy brownie cookies with chunks of dark chocolate and a chewy center.",
        emoji: "??"
    },
    {
        id: 3,
        name: "Oatmeal Raisin Delight",
        price: 11.99,
        description: "Hearty oatmeal cookies packed with plump raisins and a hint of cinnamon.",
        emoji: "??"
    },
    {
        id: 4,
        name: "Snickerdoodle Supreme",
        price: 13.99,
        description: "Soft, chewy cookies rolled in cinnamon sugar with a perfect crackled top.",
        emoji: "?"
    },
    {
        id: 5,
        name: "Peanut Butter Paradise",
        price: 13.49,
        description: "Creamy peanut butter cookies with a soft center and distinctive cross-hatch pattern.",
        emoji: "??"
    },
    {
        id: 6,
        name: "Sugar Cookie Sunshine",
        price: 10.99,
        description: "Classic sugar cookies with a tender crumb and sweet vanilla flavor, perfect for decorating.",
        emoji: "??"
    }
];

// Shopping cart
let cart = [];

// Initialize the application
document.addEventListener('DOMContentLoaded', function() {
    loadProducts();
    updateCartCount();
    setupEventListeners();
    showWelcomeMessage();
});

// Show welcome message about AI generation
function showWelcomeMessage() {
    setTimeout(() => {
        console.log('?? Welcome to Sweet Cookie Shop!');
        console.log('?? This entire website was generated by CodePilot AI in seconds!');
        console.log('? Features include: responsive design, shopping cart, product catalog, and more!');
    }, 1000);
}

// Load products into the grid
function loadProducts() {
    const productGrid = document.getElementById('product-grid');
    
    products.forEach(product => {
        const productCard = createProductCard(product);
        productGrid.appendChild(productCard);
    });
}

// Create product card element
function createProductCard(product) {
    const card = document.createElement('div');
    card.className = 'product-card';
    
    card.innerHTML = `
        <div class="product-image">
            <span style="font-size: 3rem;">${product.emoji}</span>
        </div>
        <h3>${product.name}</h3>
        <p>${product.description}</p>
        <div class="product-price">$${product.price}</div>
        <button class="add-to-cart" onclick="addToCart(${product.id})">
            <i class="fas fa-cart-plus"></i> Add to Cart
        </button>
    `;
    
    return card;
}

// Add product to cart
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        const existingItem = cart.find(item => item.id === productId);
        
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            cart.push({
                ...product,
                quantity: 1
            });
        }
        
        updateCartCount();
        showAddToCartNotification(product.name);
    }
}

// Update cart count in header
function updateCartCount() {
    const cartCount = cart.reduce((total, item) => total + item.quantity, 0);
    document.getElementById('cart-count').textContent = cartCount;
}

// Show cart modal
function showCart() {
    const modal = document.getElementById('cart-modal');
    const cartItems = document.getElementById('cart-items');
    const cartTotal = document.getElementById('cart-total');
    
    // Clear previous items
    cartItems.innerHTML = '';
    
    if (cart.length === 0) {
        cartItems.innerHTML = '<p style="text-align: center; color: #666;">Your cart is empty</p>';
        cartTotal.textContent = '0.00';
    } else {
        let total = 0;
        
        cart.forEach(item => {
            const itemElement = document.createElement('div');
            itemElement.className = 'cart-item';
            itemElement.style.cssText = 'display: flex; justify-content: space-between; align-items: center; padding: 15px; border-bottom: 1px solid #eee;';
            
            const itemTotal = item.price * item.quantity;
            total += itemTotal;
            
            itemElement.innerHTML = `
                <div>
                    <strong>${item.name}</strong>
                    <div style="color: #666; font-size: 0.9rem;">$${item.price} each</div>
                </div>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <button onclick="updateQuantity(${item.id}, -1)" style="background: #f0f0f0; border: none; padding: 5px 10px; border-radius: 5px; cursor: pointer;">-</button>
                    <span>${item.quantity}</span>
                    <button onclick="updateQuantity(${item.id}, 1)" style="background: #f0f0f0; border: none; padding: 5px 10px; border-radius: 5px; cursor: pointer;">+</button>
                    <span style="margin-left: 15px; font-weight: bold;">$${itemTotal.toFixed(2)}</span>
                    <button onclick="removeFromCart(${item.id})" style="background: #ff4444; color: white; border: none; padding: 5px 10px; border-radius: 5px; cursor: pointer; margin-left: 10px;">ï¿½</button>
                </div>
            `;
            
            cartItems.appendChild(itemElement);
        });
        
        cartTotal.textContent = total.toFixed(2);
    }
    
    modal.style.display = 'block';
}

// Update item quantity in cart
function updateQuantity(productId, change) {
    const item = cart.find(item => item.id === productId);
    if (item) {
        item.quantity += change;
        if (item.quantity <= 0) {
            removeFromCart(productId);
        } else {
            updateCartCount();
            showCart(); // Refresh cart display
        }
    }
}

// Remove item from cart
function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    updateCartCount();
    showCart(); // Refresh cart display
}

// Close cart modal
function closeCart() {
    document.getElementById('cart-modal').style.display = 'none';
}

// Checkout function
function checkout() {
    if (cart.length === 0) {
        alert('Your cart is empty!');
        return;
    }
    
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    alert(`?? Thank you for your order!\n\nTotal: $${total.toFixed(2)}\n\n?? This website was generated by CodePilot AI!\n\nIn a real store, you would be redirected to payment processing.`);
    
    // Clear cart
    cart = [];
    updateCartCount();
    closeCart();
}

// Smooth scrolling to sections
function scrollToSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
        section.scrollIntoView({ 
            behavior: 'smooth',
            block: 'start'
        });
    }
}

// Show add to cart notification
function showAddToCartNotification(productName) {
    // Create notification element
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: #4CAF50;
        color: white;
        padding: 15px 20px;
        border-radius: 5px;
        z-index: 3000;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        transform: translateX(100%);
        transition: transform 0.3s ease;
    `;
    
    notification.innerHTML = `
        <i class="fas fa-check-circle"></i>
        ${productName} added to cart!
    `;
    
    document.body.appendChild(notification);
    
    // Animate in
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    // Remove after delay
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 2000);
}

// Setup event listeners
function setupEventListeners() {
    // Modal close on outside click
    document.getElementById('cart-modal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeCart();
        }
    });
    
    // Smooth scrolling for navigation links
    document.querySelectorAll('.nav-links a[href^="#"]').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('href').substring(1);
            scrollToSection(targetId);
        });
    });
}

// Add some dynamic effects
window.addEventListener('scroll', function() {
    const header = document.querySelector('.header');
    if (window.scrollY > 100) {
        header.style.background = 'linear-gradient(135deg, rgba(139, 69, 19, 0.95), rgba(210, 105, 30, 0.95))';
    } else {
        header.style.background = 'linear-gradient(135deg, #8B4513, #D2691E)';
    }
});

// Initialize
updateCartCount();

// AI Generated message
console.log('?? Sweet Cookie Shop fully loaded!');
console.log('?? Generated by CodePilot AI - Your AI Application Builder');
console.log('? Time to generate: <30 seconds');
console.log('?? Features: Responsive design, shopping cart, product catalog, animations');