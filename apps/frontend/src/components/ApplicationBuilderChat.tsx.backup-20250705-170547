import React, { useState } from "react";

const dummyMessages = [
  { id: "msg-1", text: "Hello!", isUser: true },
  { id: "msg-2", text: "Hi there!", isUser: false }
];

export default function ApplicationBuilderChat() {
  const [messages, setMessages] = useState(dummyMessages);
  const [input, setInput] = useState("");

  // Handle sending a message
  const handleSend = () => {
    if (input.trim() === "") return;
    setMessages([
      ...messages,
      { id: "msg-" + (messages.length + 1), text: input, isUser: true }
    ]);
    setInput("");
  };

  // Allow sending with Enter key
  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      handleSend();
    }
  };

  return (
    <div className="flex flex-col h-full max-h-full chat-container">
      <div className="flex-1 overflow-y-auto p-4" style={{ maxHeight: "100%", minHeight: 0, overflowY: "auto" }}>
        {messages.map((message, index) => (
          <div
            key={message.id + '-' + index}
            className={`max-w-lg rounded-lg px-4 py-3 mb-2 ${
              message.isUser
                ? "bg-blue-600 text-white"
                : "bg-gray-100"
            }`}
          >
            {message.text}
          </div>
        ))}
      </div>
      <div className="border-t p-4 flex gap-2">
        <input
          className="w-full border rounded px-2 py-1"
          placeholder="Type a message..."
          value={input}
          onChange={e => setInput(e.target.value)}
          onKeyDown={handleKeyDown}
        />
        <button
          className="bg-blue-600 text-white px-4 py-1 rounded hover:bg-blue-700 transition"
          onClick={handleSend}
          disabled={input.trim() === ""}
          aria-label="Send"
        >
          Send
        </button>
      </div>
    </div>
  );
}
